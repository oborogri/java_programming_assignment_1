#BlueJ class context
comment0.params=s1\ s2
comment0.target=boolean\ isEqual(java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Checks\ if\ s1\ is\ equal\ to\ s2\r\n\ @returns\ true\ if\ strings\ equal\ else\ false\r\n
comment1.params=s1\ s2
comment1.target=boolean\ isEqualIgnoreCase(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Checks\ if\ s1\ is\ equal\ to\ s2\ ignoring\ case\r\n\ @returns\ true\ if\ strings\ equal,\ ignoring\ case,\ else\ false\r\n
comment10.params=s
comment10.target=boolean\ isPalindrome(java.lang.String)
comment10.text=\ \r\n\ Checks\ if\ string\ is\ a\ palindrom\ \r\n\ @return\ true\ if\ argument\ is\ a\ palindrome,\ else\ false.\r\n
comment2.params=s1\ prefix
comment2.target=boolean\ hasPrefix(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Checks\ if\ s1\ has\ prefix\r\n\ @returns\ true\ if\ s1\ has\ prefix,\ else\ false\r\n
comment3.params=s1\ s2
comment3.target=int\ length(java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Calculates\ Length\ of\ string\ comprising\ concatenated\ strings\ s1\ and\ s2\r\n\ @returns\ length\ of\ s1\ concatenated\ with\ s2\r\n
comment4.params=s1
comment4.target=java.lang.String\ toUpper(java.lang.String)
comment4.text=\r\n\ Creates\ string\ the\ uppercase\ version\ of\ s1\r\n\ @returns\ copy\ of\ s1\ all\ in\ upper\ case\r\n
comment5.params=s1\ suffix
comment5.target=boolean\ endsWith(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Returns\ true\ if\ string\ ends\ with\ suffix.\r\n
comment6.params=s1\ indexStart\ indexEnd
comment6.target=java.lang.String\ subString(java.lang.String,\ int,\ int)
comment6.text=\r\n\ Creates\ a\ substring\ of\ s1\ from\ indexStart\ to\ indexEnd\ \r\n\ @returns\ the\ substring\r\n
comment7.params=string
comment7.target=java.lang.String\ reverse_1(java.lang.String)
comment7.text=\r\n\ Creates\ a\ string,\ the\ reverse\ of\ given\ string\ using\ StringBuilder\r\n\ @returns\ a\ copy\ of\ given\ string\ reversed\r\n
comment8.params=string
comment8.target=java.lang.String\ reverse_2(java.lang.String)
comment8.text=\r\n\ Creates\ a\ string\ which\ is\ the\ reverse\ of\ given\ string\r\n\ Uses\ an\ array\ of\ char\ type\ which\ is\ populated\ with\ the\ string\ in\ reverse\ order\r\n\ Returns\ the\ string\ reversed\r\n
comment9.params=string
comment9.target=java.lang.String\ reverse_3(java.lang.String)
comment9.text=\r\n\ Creates\ a\ reverse\ string\ using\ a\ StringBuffer\ class\r\n\ Returns\ a\ copy\ of\ string\ reversed\r\n
numComments=11
